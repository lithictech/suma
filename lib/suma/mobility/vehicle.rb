# frozen_string_literal: true

require "suma/mobility"
require "suma/postgres/model"

class Suma::Mobility::Vehicle < Suma::Postgres::Model(:mobility_vehicles)
  plugin :timestamps

  many_to_one :vendor_service, key: :vendor_service_id, class: "Suma::Vendor::Service"

  dataset_module do
    def search(min_lat:, min_lng:, max_lat:, max_lng:)
      return self.where { (lat >= min_lat) & (lat <= max_lat) & (lng >= min_lng) & (lng <= max_lng) }
    end
  end

  def api_identity
    return "#{self.lat}-#{self.lng}-#{self.vendor_service_id}-#{self.vehicle_type}"
  end

  def to_api_location
    return [Suma::Mobility.coord2int(self.lat), Suma::Mobility.coord2int(self.lng)]
  end
end

# Table: mobility_vehicles
# ----------------------------------------------------------------------------------------------------------------
# Columns:
#  id                | integer  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  lat               | numeric  | NOT NULL
#  lng               | numeric  | NOT NULL
#  vehicle_type      | text     | NOT NULL
#  vehicle_id        | text     | NOT NULL
#  vendor_service_id | integer  | NOT NULL
#  battery_level     | smallint |
# Indexes:
#  mobility_vehicles_pkey                    | PRIMARY KEY btree (id)
#  mobility_vehicles_vendor_service_id_index | btree (vendor_service_id)
# Check constraints:
#  valid_battery_level | (battery_level >= 0 AND battery_level <= 100)
# Foreign key constraints:
#  mobility_vehicles_vendor_service_id_fkey | (vendor_service_id) REFERENCES vendor_services(id) ON DELETE CASCADE
# ----------------------------------------------------------------------------------------------------------------
