# frozen_string_literal: true

require "suma/postgres"
require "suma/member"

class Suma::Member::Referral < Suma::Postgres::Model(:member_referral)
  plugin :timestamps

  one_to_one :member, class: Suma::Member

  # def self.params_for_request(request)
  #   return {
  #     peer_ip: request.ip,
  #     user_agent: request.user_agent || "(unset)",
  #   }
  # end
  #
  # def validate
  #   super
  #   self.validates_presence :peer_ip
  #   self.validates_presence :user_agent
  #   self.validates_presence :member_id
  # end
end

# Table: member_sessions
# --------------------------------------------------------------------------------------
# Columns:
#  id         | integer                  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  created_at | timestamp with time zone | NOT NULL DEFAULT now()
#  member_id  | integer                  | NOT NULL
#  user_agent | text                     | NOT NULL
#  peer_ip    | inet                     | NOT NULL
# Indexes:
#  member_sessions_pkey             | PRIMARY KEY btree (id)
#  member_sessions_member_id_index  | btree (member_id)
#  member_sessions_peer_ip_index    | btree (peer_ip)
#  member_sessions_user_agent_index | btree (user_agent)
# Foreign key constraints:
#  member_sessions_member_id_fkey | (member_id) REFERENCES members(id) ON DELETE CASCADE
# --------------------------------------------------------------------------------------
