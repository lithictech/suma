# frozen_string_literal: true

require "suma/postgres/model"

class Suma::SupportedGeography < Suma::Postgres::Model(:supported_geographies)
  many_to_one :parent, class: self
end

# Table: supported_geographies
# ----------------------------------------------------------------------------------------------------------------------------------
# Columns:
#  id        | integer | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  label     | citext  | NOT NULL
#  value     | citext  | NOT NULL
#  type      | text    | NOT NULL
#  parent_id | integer |
# Indexes:
#  supported_geographies_pkey | PRIMARY KEY btree (id)
#  unique_child_labels        | UNIQUE btree (label, parent_id)
#  unique_child_values        | UNIQUE btree (value, parent_id)
# Check constraints:
#  valid_type          | (type = ANY (ARRAY['province'::text, 'country'::text]))
#  valid_type_settings | (type = 'country'::text AND parent_id IS NULL OR type = 'province'::text AND parent_id IS NOT NULL)
# Foreign key constraints:
#  supported_geographies_parent_id_fkey | (parent_id) REFERENCES supported_geographies(id) ON DELETE CASCADE
# Referenced By:
#  supported_geographies | supported_geographies_parent_id_fkey | (parent_id) REFERENCES supported_geographies(id) ON DELETE CASCADE
# ----------------------------------------------------------------------------------------------------------------------------------
