# frozen_string_literal: true

require "suma/organization"
require "suma/postgres/model"

class Suma::Organization::Membership::VerificationNote <
  Suma::Postgres::Model(:organization_membership_verification_notes)
  many_to_one :verification, class: "Suma::Organization::Membership::Verification", key: :verification_id
  many_to_one :creator, class: "Suma::Member"
  many_to_one :editor, class: "Suma::Member"

  # Return content rendered as markdown html.
  # It will have no container paragraph element, to make it easier to nest.
  def content_html
    s = Suma::I18n::Formatter.redcarpet.render(self.content)
    s.strip!
    s.delete_prefix!("<p>")
    s.delete_suffix!("</p>")
    return s
  end
end

# Table: organization_membership_verification_notes
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
# Columns:
#  id              | integer                  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  created_at      | timestamp with time zone | NOT NULL DEFAULT now()
#  edited_at       | timestamp with time zone |
#  content         | text                     | NOT NULL
#  verification_id | integer                  | NOT NULL
#  creator_id      | integer                  |
#  editor_id       | integer                  |
# Indexes:
#  organization_membership_verification_notes_pkey | PRIMARY KEY btree (id)
# Foreign key constraints:
#  organization_membership_verification_notes_creator_id_fkey      | (creator_id) REFERENCES members(id) ON DELETE SET NULL
#  organization_membership_verification_notes_editor_id_fkey       | (editor_id) REFERENCES members(id) ON DELETE SET NULL
#  organization_membership_verification_notes_verification_id_fkey | (verification_id) REFERENCES organization_membership_verifications(id) ON DELETE CASCADE
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
