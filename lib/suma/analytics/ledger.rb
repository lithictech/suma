# frozen_string_literal: true

require "suma/analytics/model"

class Suma::Analytics::Ledger < Suma::Analytics::Model(Sequel[:analytics][:ledgers])
  unique_key :ledger_id

  destroy_from Suma::Payment::Ledger

  denormalize Suma::Payment::Ledger, with: :denormalize_ledger

  def self.denormalize_ledger(led)
    return {
      ledger_id: led.id,
      payment_account_id: led.account_id,
      member_id: led.account.member_id,
      name: led.name,
      balance: led.balance,
      total_credits: led.received_book_transactions.sum(Money.new(0), &:amount),
      total_debits: led.originated_book_transactions.sum(Money.new(0), &:amount),
      categories: led.vendor_service_categories.map(&:name).sort,
    }
  end
end

# Table: analytics.ledgers
# ----------------------------------------------------------------------------
# Columns:
#  pk                 | integer | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  ledger_id          | integer | NOT NULL
#  payment_account_id | integer |
#  member_id          | integer |
#  name               | text    |
#  balance            | numeric |
#  total_credits      | numeric |
#  total_debits       | numeric |
# Indexes:
#  ledgers_pkey          | PRIMARY KEY btree (pk)
#  ledgers_ledger_id_key | UNIQUE btree (ledger_id)
# ----------------------------------------------------------------------------
