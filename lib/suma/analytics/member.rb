# frozen_string_literal: true

require "suma/analytics/model"

class Suma::Analytics::Member < Suma::Analytics::Model(Sequel[:analytics][:members])
  unique_key :member_id

  destroy_from Suma::Member
  denormalize Suma::Member, with: [
    [:member_id, :id],
    :created_at,
    :soft_deleted_at,
    :phone,
    :email,
    :name,
    :timezone,
    [:onboarding_verified, ->(m) { m.onboarding_verified_at ? true : false }],
  ]

  denormalize Suma::Commerce::Order, with: :denormalize_order

  def self.denormalize_order(order)
    member = order.checkout.cart.member
    return {member_id: member.id, order_count: member.orders_dataset.count}
  end

  denormalize Suma::Message::Preferences, with: [
    :member_id,
    :preferred_language,
    :account_updates_sms_optout,
    :marketing_sms_optout,
  ]
end

# Table: analytics.members
# ------------------------------------------------------------------------------------------
# Columns:
#  pk              | integer                  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  member_id       | integer                  | NOT NULL
#  created_at      | timestamp with time zone |
#  soft_deleted_at | timestamp with time zone |
#  email           | text                     |
#  phone           | text                     |
#  name            | text                     |
#  timezone        | text                     |
#  order_count     | integer                  |
# Indexes:
#  members_pkey          | PRIMARY KEY btree (pk)
#  members_member_id_key | UNIQUE btree (member_id)
# ------------------------------------------------------------------------------------------
