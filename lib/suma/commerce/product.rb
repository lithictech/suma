# frozen_string_literal: true

require "suma/commerce"
require "suma/image"
require "suma/postgres/model"
require "suma/vendor/has_service_categories"
require "suma/admin_linked"

class Suma::Commerce::Product < Suma::Postgres::Model(:commerce_products)
  include Suma::Postgres::HybridSearch
  include Suma::Image::SingleAssociatedMixin
  include Suma::AdminLinked

  plugin :hybrid_search
  plugin :timestamps
  plugin :money_fields, :our_cost
  plugin :translated_text, :name, Suma::TranslatedText
  plugin :translated_text, :description, Suma::TranslatedText

  many_to_one :vendor, class: "Suma::Vendor"
  one_to_many :offering_products, class: "Suma::Commerce::OfferingProduct", order: order_desc

  one_to_one :inventory, class: "Suma::Commerce::ProductInventory"

  many_to_many :vendor_service_categories, class: "Suma::Vendor::ServiceCategory",
                                           join_table: :vendor_service_categories_commerce_products,
                                           left_key: :product_id,
                                           right_key: :category_id
  include Suma::Vendor::HasServiceCategories

  many_through_many :orders,
                    [
                      [:commerce_offering_products, :product_id, :id],
                      [:commerce_checkout_items, :offering_product_id, :checkout_id],
                    ],
                    class: "Suma::Commerce::Order",
                    left_primary_key: :id,
                    right_primary_key: :checkout_id,
                    read_only: true,
                    order: [:created_at, :id]

  many_through_many :offerings,
                    [
                      [:commerce_offering_products, :id, :offering_id],
                    ],
                    class: "Suma::Commerce::Offering",
                    left_primary_key: :id,
                    right_primary_key: :id,
                    read_only: true,
                    order: [:created_at, :id]

  def inventory!
    return self.inventory ||= Suma::Commerce::ProductInventory.find_or_create_or_find(product: self)
  end

  def rel_admin_link = "/product/#{self.id}"

  def hybrid_search_fields
    return [
      :name,
      :description,
      :our_cost,
    ]
  end
end

# Table: commerce_products
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Columns:
#  id                | integer                  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  created_at        | timestamp with time zone | NOT NULL DEFAULT now()
#  updated_at        | timestamp with time zone |
#  vendor_id         | integer                  | NOT NULL
#  our_cost_cents    | integer                  | NOT NULL
#  our_cost_currency | text                     | NOT NULL
#  name_id           | integer                  | NOT NULL
#  description_id    | integer                  | NOT NULL
#  search_content    | text                     |
#  search_embedding  | vector(384)              |
#  search_hash       | text                     |
# Indexes:
#  commerce_products_pkey                          | PRIMARY KEY btree (id)
#  commerce_products_search_content_tsvector_index | gin (to_tsvector('english'::regconfig, search_content))
# Foreign key constraints:
#  commerce_products_description_id_fkey | (description_id) REFERENCES translated_texts(id)
#  commerce_products_name_id_fkey        | (name_id) REFERENCES translated_texts(id)
#  commerce_products_vendor_id_fkey      | (vendor_id) REFERENCES vendors(id)
# Referenced By:
#  commerce_cart_items                         | commerce_cart_items_product_id_fkey                         | (product_id) REFERENCES commerce_products(id)
#  commerce_offering_products                  | commerce_offering_products_product_id_fkey                  | (product_id) REFERENCES commerce_products(id)
#  commerce_product_inventories                | commerce_product_inventories_product_id_fkey                | (product_id) REFERENCES commerce_products(id)
#  images                                      | images_commerce_product_id_fkey                             | (commerce_product_id) REFERENCES commerce_products(id)
#  vendor_service_categories_commerce_products | vendor_service_categories_commerce_products_product_id_fkey | (product_id) REFERENCES commerce_products(id)
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------
