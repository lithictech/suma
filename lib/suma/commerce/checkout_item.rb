# frozen_string_literal: true

require "suma/commerce"
require "suma/postgres/model"

class Suma::Commerce::CheckoutItem < Suma::Postgres::Model(:commerce_checkout_items)
  include Suma::Commerce::PricedItem

  plugin :timestamps

  many_to_one :checkout, class: "Suma::Commerce::Checkout"
  # Keep track of the offering product so prices never change on the checkout.
  many_to_one :offering_product, class: "Suma::Commerce::OfferingProduct"
  # Point to the cart item, rather than copying the quantity.
  many_to_one :cart_item, class: "Suma::Commerce::CartItem"

  def quantity
    return self.immutable_quantity || self.cart_item.quantity
  end
end

# Table: commerce_checkout_items
# --------------------------------------------------------------------------------------------------------------------------------------------
# Columns:
#  id                  | integer                  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  created_at          | timestamp with time zone | NOT NULL DEFAULT now()
#  offering_product_id | integer                  | NOT NULL
#  checkout_id         | integer                  | NOT NULL
#  cart_item_id        | integer                  |
#  immutable_quantity  | integer                  |
# Indexes:
#  commerce_checkout_items_pkey                                  | PRIMARY KEY btree (id)
#  commerce_checkout_items_checkout_id_cart_item_id_index        | UNIQUE btree (checkout_id, cart_item_id)
#  commerce_checkout_items_checkout_id_offering_product_id_index | UNIQUE btree (checkout_id, offering_product_id)
# Check constraints:
#  unambiguous_quantity | (cart_item_id IS NOT NULL AND immutable_quantity IS NULL OR cart_item_id IS NULL AND immutable_quantity IS NOT NULL)
# Foreign key constraints:
#  commerce_checkout_items_cart_item_id_fkey        | (cart_item_id) REFERENCES commerce_cart_items(id)
#  commerce_checkout_items_checkout_id_fkey         | (checkout_id) REFERENCES commerce_checkouts(id) ON DELETE CASCADE
#  commerce_checkout_items_offering_product_id_fkey | (offering_product_id) REFERENCES commerce_offering_products(id)
# --------------------------------------------------------------------------------------------------------------------------------------------
