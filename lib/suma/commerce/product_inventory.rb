# frozen_string_literal: true

require "suma/commerce"

class Suma::Commerce::ProductInventory < Suma::Postgres::Model(:commerce_product_inventories)
  plugin :timestamps

  many_to_one :product, class: "Suma::Commerce::Product"

  def limited_quantity? = self[:limited_quantity]
end

# Table: commerce_product_inventories
# -------------------------------------------------------------------------------------------------------------------------
# Columns:
#  id                                   | integer                  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  created_at                           | timestamp with time zone | NOT NULL DEFAULT now()
#  updated_at                           | timestamp with time zone |
#  product_id                           | integer                  | NOT NULL
#  max_quantity_per_member_per_offering | integer                  |
#  limited_quantity                     | boolean                  | NOT NULL DEFAULT false
#  quantity_on_hand                     | integer                  | NOT NULL DEFAULT 0
#  quantity_pending_fulfillment         | integer                  | NOT NULL DEFAULT 0
# Indexes:
#  commerce_product_inventories_pkey           | PRIMARY KEY btree (id)
#  commerce_product_inventories_product_id_key | UNIQUE btree (product_id)
# Check constraints:
#  positive_quantity_per_order | (max_quantity_per_member_per_offering IS NULL OR max_quantity_per_member_per_offering > 0)
# Foreign key constraints:
#  commerce_product_inventories_product_id_fkey | (product_id) REFERENCES commerce_products(id)
# -------------------------------------------------------------------------------------------------------------------------
