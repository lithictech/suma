# frozen_string_literal: true

require "suma/postgres/model"
require "suma/admin_linked"

class Suma::Charge < Suma::Postgres::Model(:charges)
  include Suma::AdminLinked

  plugin :timestamps
  plugin :money_fields, :undiscounted_subtotal

  many_to_one :member, class: "Suma::Member"
  many_to_one :mobility_trip, class: "Suma::Mobility::Trip"
  many_to_one :commerce_order, class: "Suma::Commerce::Order"
  many_to_many :book_transactions,
               class: "Suma::Payment::BookTransaction",
               join_table: :charges_payment_book_transactions,
               left_key: :charge_id,
               right_key: :book_transaction_id
  # Keep track of any synchronous funding transactions
  # that were caused due to this charge. There is NOT a direct linkage
  # in ledgering terms- this is rather modeling the user experience
  # of when a charge and funding event happen one after the other
  # (ie, paying for an order during checkout, charges a card
  # to cover the difference).
  many_to_many :associated_funding_transactions,
               class: "Suma::Payment::FundingTransaction",
               join_table: :charges_associated_funding_transactions,
               left_key: :charge_id,
               right_key: :funding_transaction_id

  def initialize(*)
    super
    self.opaque_id ||= Suma::Secureid.new_opaque_id("ch")
  end

  def discounted_subtotal
    return self.book_transactions.sum(Money.new(0), &:amount)
  end

  def discount_amount
    return self.undiscounted_subtotal - self.discounted_subtotal
  end

  def rel_admin_link = "/charges/#{self.id}"
end

# Table: charges
# --------------------------------------------------------------------------------------------------------------------------------------
# Columns:
#  id                             | integer                  | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  created_at                     | timestamp with time zone | NOT NULL DEFAULT now()
#  updated_at                     | timestamp with time zone |
#  opaque_id                      | text                     | NOT NULL
#  undiscounted_subtotal_cents    | integer                  | NOT NULL
#  undiscounted_subtotal_currency | text                     | NOT NULL
#  member_id                      | integer                  | NOT NULL
#  mobility_trip_id               | integer                  |
#  commerce_order_id              | integer                  |
# Indexes:
#  charges_pkey                    | PRIMARY KEY btree (id)
#  charges_commerce_order_id_index | btree (commerce_order_id)
#  charges_member_id_index         | btree (member_id)
#  charges_mobility_trip_id_index  | btree (mobility_trip_id)
# Foreign key constraints:
#  charges_commerce_order_id_fkey | (commerce_order_id) REFERENCES commerce_orders(id) ON DELETE SET NULL
#  charges_member_id_fkey         | (member_id) REFERENCES members(id)
#  charges_mobility_trip_id_fkey  | (mobility_trip_id) REFERENCES mobility_trips(id) ON DELETE SET NULL
# Referenced By:
#  charges_associated_funding_transactions | charges_associated_funding_transactions_charge_id_fkey | (charge_id) REFERENCES charges(id)
#  charges_payment_book_transactions       | charges_payment_book_transactions_charge_id_fkey       | (charge_id) REFERENCES charges(id)
# --------------------------------------------------------------------------------------------------------------------------------------
